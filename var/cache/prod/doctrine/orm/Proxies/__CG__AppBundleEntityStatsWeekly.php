<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StatsWeekly extends \AppBundle\Entity\StatsWeekly implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'year', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'month', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'week', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'day', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'date', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'subscribers', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'subscribersperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'unsubscribers', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'unsubscribersperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'campaignssent', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'campaignsperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'emailssent', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'emailssentperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'revenue', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'revenueperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'clicks', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'clicksperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'datemodified'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'year', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'month', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'week', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'day', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'date', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'subscribers', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'subscribersperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'unsubscribers', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'unsubscribersperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'campaignssent', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'campaignsperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'emailssent', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'emailssentperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'revenue', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'revenueperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'clicks', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'clicksperiod', '' . "\0" . 'AppBundle\\Entity\\StatsWeekly' . "\0" . 'datemodified'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StatsWeekly $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonth($month)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonth', [$month]);

        return parent::setMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', []);

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeek($week)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeek', [$week]);

        return parent::setWeek($week);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeek()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeek', []);

        return parent::getWeek();
    }

    /**
     * {@inheritDoc}
     */
    public function setDay($day)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDay', [$day]);

        return parent::setDay($day);
    }

    /**
     * {@inheritDoc}
     */
    public function getDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDay', []);

        return parent::getDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribers($subscribers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribers', [$subscribers]);

        return parent::setSubscribers($subscribers);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribers', []);

        return parent::getSubscribers();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribersperiod($subscribersperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribersperiod', [$subscribersperiod]);

        return parent::setSubscribersperiod($subscribersperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribersperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribersperiod', []);

        return parent::getSubscribersperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribers($unsubscribers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribers', [$unsubscribers]);

        return parent::setUnsubscribers($unsubscribers);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribers', []);

        return parent::getUnsubscribers();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribersperiod($unsubscribersperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribersperiod', [$unsubscribersperiod]);

        return parent::setUnsubscribersperiod($unsubscribersperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribersperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribersperiod', []);

        return parent::getUnsubscribersperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaignssent($campaignssent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaignssent', [$campaignssent]);

        return parent::setCampaignssent($campaignssent);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaignssent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaignssent', []);

        return parent::getCampaignssent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaignsperiod($campaignsperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaignsperiod', [$campaignsperiod]);

        return parent::setCampaignsperiod($campaignsperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaignsperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaignsperiod', []);

        return parent::getCampaignsperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailssent($emailssent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailssent', [$emailssent]);

        return parent::setEmailssent($emailssent);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailssent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailssent', []);

        return parent::getEmailssent();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailssentperiod($emailssentperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailssentperiod', [$emailssentperiod]);

        return parent::setEmailssentperiod($emailssentperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailssentperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailssentperiod', []);

        return parent::getEmailssentperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevenue($revenue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevenue', [$revenue]);

        return parent::setRevenue($revenue);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevenue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevenue', []);

        return parent::getRevenue();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevenueperiod($revenueperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevenueperiod', [$revenueperiod]);

        return parent::setRevenueperiod($revenueperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevenueperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevenueperiod', []);

        return parent::getRevenueperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setClicks($clicks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClicks', [$clicks]);

        return parent::setClicks($clicks);
    }

    /**
     * {@inheritDoc}
     */
    public function getClicks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClicks', []);

        return parent::getClicks();
    }

    /**
     * {@inheritDoc}
     */
    public function setClicksperiod($clicksperiod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClicksperiod', [$clicksperiod]);

        return parent::setClicksperiod($clicksperiod);
    }

    /**
     * {@inheritDoc}
     */
    public function getClicksperiod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClicksperiod', []);

        return parent::getClicksperiod();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatemodified($datemodified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatemodified', [$datemodified]);

        return parent::setDatemodified($datemodified);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatemodified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatemodified', []);

        return parent::getDatemodified();
    }

}
