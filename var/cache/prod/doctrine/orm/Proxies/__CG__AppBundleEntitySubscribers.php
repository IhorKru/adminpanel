<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Subscribers extends \AppBundle\Entity\Subscribers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'userid', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'emailaddress', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'custom_fields', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'list', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'unsubscribed', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'bounced', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'bounce_soft', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'complaint', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'last_campaign', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'last_ares', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'timestamp', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'join_date', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'confirmed', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'messageID'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'userid', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'emailaddress', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'custom_fields', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'list', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'unsubscribed', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'bounced', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'bounce_soft', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'complaint', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'last_campaign', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'last_ares', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'timestamp', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'join_date', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'confirmed', '' . "\0" . 'AppBundle\\Entity\\Subscribers' . "\0" . 'messageID'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Subscribers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserid($userid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserid', [$userid]);

        return parent::setUserid($userid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserid', []);

        return parent::getUserid();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailaddress($emailaddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailaddress', [$emailaddress]);

        return parent::setEmailaddress($emailaddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailaddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailaddress', []);

        return parent::getEmailaddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomFields($customFields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomFields', [$customFields]);

        return parent::setCustomFields($customFields);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomFields', []);

        return parent::getCustomFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setList($list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setList', [$list]);

        return parent::setList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function getList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getList', []);

        return parent::getList();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribed($unsubscribed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribed', [$unsubscribed]);

        return parent::setUnsubscribed($unsubscribed);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribed', []);

        return parent::getUnsubscribed();
    }

    /**
     * {@inheritDoc}
     */
    public function setBounced($bounced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBounced', [$bounced]);

        return parent::setBounced($bounced);
    }

    /**
     * {@inheritDoc}
     */
    public function getBounced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBounced', []);

        return parent::getBounced();
    }

    /**
     * {@inheritDoc}
     */
    public function setBounceSoft($bounceSoft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBounceSoft', [$bounceSoft]);

        return parent::setBounceSoft($bounceSoft);
    }

    /**
     * {@inheritDoc}
     */
    public function getBounceSoft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBounceSoft', []);

        return parent::getBounceSoft();
    }

    /**
     * {@inheritDoc}
     */
    public function setComplaint($complaint)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComplaint', [$complaint]);

        return parent::setComplaint($complaint);
    }

    /**
     * {@inheritDoc}
     */
    public function getComplaint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComplaint', []);

        return parent::getComplaint();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastCampaign($lastCampaign)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastCampaign', [$lastCampaign]);

        return parent::setLastCampaign($lastCampaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastCampaign', []);

        return parent::getLastCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastAres($lastAres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastAres', [$lastAres]);

        return parent::setLastAres($lastAres);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastAres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastAres', []);

        return parent::getLastAres();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimestamp($timestamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimestamp', [$timestamp]);

        return parent::setTimestamp($timestamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimestamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimestamp', []);

        return parent::getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    public function setJoinDate($joinDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJoinDate', [$joinDate]);

        return parent::setJoinDate($joinDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getJoinDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJoinDate', []);

        return parent::getJoinDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmed($confirmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmed', [$confirmed]);

        return parent::setConfirmed($confirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmed', []);

        return parent::getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageID($messageID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageID', [$messageID]);

        return parent::setMessageID($messageID);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageID', []);

        return parent::getMessageID();
    }

}
